{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\win\\\\OneDrive\\\\Desktop\\\\Dot batch\\\\React Advance\\\\blogs_context\\\\blogs-context-starter\\\\src\\\\context\\\\AppContext.js\",\n  _s = $RefreshSig$();\nimport { createContext } from \"react\";\nimport { useState } from \"react\";\nimport { baseUrl } from \"../baseUrl\";\nimport { useNavigate } from \"react-router-dom\";\n\n// step 1. creation\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AppContext = /*#__PURE__*/createContext();\nexport default function AppContextProvider(_ref) {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [posts, setPosts] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [page, setPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(null);\n  const navigate = useNavigate();\n  // data filling pending  \n  async function fetchBlogPosts() {\n    let page = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n    let tag = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    let category = arguments.length > 2 ? arguments[2] : undefined;\n    setLoading(true);\n    let url = `${baseUrl}get-blogs?page=${page}`;\n    if (tag) {\n      url += `&tag=${tag}`;\n    }\n    if (category) {\n      url += `&category=${category}`;\n    }\n    console.log(\"printitng the data url\");\n    console.log(url);\n    try {\n      const result = await fetch(url);\n      const data = await result.json();\n      if (!data.posts || data.posts.length === 0) throw new Error(\"some thing went wrong\");\n      console.log(data);\n      setPage(data.page);\n      setPosts(data.posts);\n      setTotalPages(data.totalPages);\n    } catch (error) {\n      console.log('Error in fetching data');\n      setPage(1);\n      setPosts([]);\n      setTotalPages(null);\n    }\n    setLoading(false);\n  }\n\n  // onclick find data according to page no.\n  function changePageHandler(page) {\n    navigate({\n      search: `?page=${page}`\n    });\n    setPage(page);\n  }\n  const value = {\n    posts,\n    setPosts,\n    loading,\n    setLoading,\n    page,\n    setPage,\n    totalPages,\n    setTotalPages,\n    fetchBlogPosts,\n    changePageHandler\n  };\n  // step 2. providing\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 12\n  }, this);\n}\n_s(AppContextProvider, \"q6TCIE7mwJt7LpLnggYnqjht3gM=\", false, function () {\n  return [useNavigate];\n});\n_c = AppContextProvider;\nvar _c;\n$RefreshReg$(_c, \"AppContextProvider\");","map":{"version":3,"names":["createContext","useState","baseUrl","useNavigate","jsxDEV","_jsxDEV","AppContext","AppContextProvider","_ref","_s","children","posts","setPosts","loading","setLoading","page","setPage","totalPages","setTotalPages","navigate","fetchBlogPosts","arguments","length","undefined","tag","category","url","console","log","result","fetch","data","json","Error","error","changePageHandler","search","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/win/OneDrive/Desktop/Dot batch/React Advance/blogs_context/blogs-context-starter/src/context/AppContext.js"],"sourcesContent":["import { createContext } from \"react\"\r\nimport { useState } from \"react\";\r\nimport { baseUrl } from \"../baseUrl\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\n// step 1. creation\r\nexport const AppContext = createContext();\r\n\r\nexport default function AppContextProvider({ children }) {\r\n    const [posts, setPosts] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [page, setPage] = useState(1);\r\n    const [totalPages, setTotalPages] = useState(null);\r\n    const navigate =useNavigate();\r\n    // data filling pending  \r\n    async function fetchBlogPosts(page = 1,tag=null ,category) {\r\n        setLoading(true);\r\n        let url = `${baseUrl}get-blogs?page=${page}`;\r\n        if(tag){\r\n            url += `&tag=${tag}`;\r\n        }\r\n        if(category){\r\n            url+=`&category=${category}`;\r\n        }\r\n        console.log(\"printitng the data url\");\r\n        console.log(url);\r\n        try {\r\n            const result = await fetch(url);\r\n            const data = await result.json();\r\n            if(!data.posts || data.posts.length === 0)\r\n            throw new Error(\"some thing went wrong\")\r\n            console.log(data);\r\n            setPage(data.page);\r\n            setPosts(data.posts);\r\n            setTotalPages(data.totalPages);\r\n        }\r\n        catch (error) {\r\n            console.log('Error in fetching data');\r\n            setPage(1);\r\n            setPosts([]);\r\n            setTotalPages(null);\r\n        }\r\n        setLoading(false);\r\n    }\r\n\r\n    // onclick find data according to page no.\r\n    function changePageHandler(page) {\r\n        navigate({search:`?page=${page}`})\r\n        setPage(page);\r\n    }\r\n\r\n\r\n    const value = {\r\n        posts,\r\n        setPosts,\r\n        loading,\r\n        setLoading,\r\n        page,\r\n        setPage,\r\n        totalPages,\r\n        setTotalPages,\r\n        fetchBlogPosts,\r\n        changePageHandler\r\n    }\r\n    // step 2. providing\r\n    return <AppContext.Provider value={value}>\r\n        {children}\r\n    </AppContext.Provider>\r\n\r\n\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}